# rime default.custom.yaml
# save it to:
#   ~/.config/ibus/rime  (linux)
#   ~/Library/Rime       (macos)
#   %APPDATA%\Rime       (windows)  可以改, 运行安装目录下的 setup 可更改
# config_version: "2024-10-10"

patch:
  # 菜单中可选的方案列表，可根据喜好自行调整顺序，第一位为默认方案
  schema_list:
    - schema: wubi                        # 五笔常用字词组
    - schema: single_char                 # 五笔全集单字  
    - schema: pinyin_simp                 # 普通拼音

  menu:
    page_size: 9                          # 候选词数量，最多支持 10 个
    # 修改候选项序号, 只用选择一种即可, 或者用默认, 下面的都注释掉
    # alternative_select_labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]           # 默认的 10 显示为 0 
    # alternative_select_labels: [①, ②, ③, ④, ⑤, ⑥, ⑦, ⑧, ⑨, ⑩]
    # alternative_select_labels: [❶, ❷, ❸, ❹, ❺, ❻, ❼, ❽, ❾, ❿]
    # alternative_select_labels: [⑴, ⑵, ⑶, ⑷, ⑸, ⑹, ⑺, ⑻, ⑼, ⑽]
    # alternative_select_labels: [Ⓐ, Ⓑ, Ⓒ, Ⓓ, Ⓔ, Ⓕ, Ⓖ, Ⓗ, Ⓘ, Ⓙ]
    # alternative_select_labels: [ⓐ, ⓑ, ⓒ, ⓓ, ⓔ, ⓕ, ⓖ, ⓗ, ⓘ, ⓙ]

  switcher:
    caption: "「方案选单」"
    hotkeys:
      - Control+Shift+F4           # 快捷键可以设置多组, 我用一个就够了
    fold_options: true             # 方案子选项折叠开关，建议: 多方案true  单方案false
    abbreviate_options: true       # 折叠时是否缩写折叠的选项
    option_list_separator: ' / '   # 折叠时的选项分隔符
    save_options:                  # 开关记忆，从方案选单 (非快捷键) 切换大方案时记住的选项 (选项中不能有 reset) 
      - zh_trad
      - full_shape
      - ascii_punct
      - emoji

  #-----------------------------------------------
  # 中英文切换自定义
  #-----------------------------------------------
  # inline_ascii  在输入法的临时英文编辑区内输入字母，数字，符号，空格等，回车上屏后自动复位到中文, 最没用的功能
  # commit_text   候选中文上屏并切换至英文输入模式
  # commit_code   编码字符上屏并切换至英文输入模式
  # clear         清除拼音并切换至英文
  # noop          屏蔽此按键
  #-----------------------------------------------

  ascii_composer:
    good_old_caps_lock: true         # true: CapsLock 切换大小写   false: 切换中英
    switch_key:
      Caps_Lock: commit_code
      Shift_L: noop
      Shift_R: commit_code         
      Control_L: noop 
      Control_R: noop
      # Conrol_L+space: commit_code  # Rime 目前还不支持, 真的蠢
  
  # 下面的 key_binder punctuator recognizer 写了一些所有方案通用的配置项
  # 写在 default.yaml 里，方便多个方案引用，不用每个方案都写一遍

  #---------------------------------
  # 按键名速查在本文档最后，改键可参考 
  #---------------------------------

  key_binder:
    bindings:
      # 候选字选择 ; '
      - { when: has_menu, accept: semicolon, send: 2 }               # 候选2 用分号 ;
      - { when: has_menu, accept: apostrophe, send: 3 }              # 候选3 用单引号 '
      - { when: has_menu, accept: slash, send: 4 }                   # 候选4 用反斜杠 /

      # 上下翻页         Tab / Shift + Tab
      - { when: has_menu, accept: Shift+Tab, send: Page_Up }         # shift + tab 向上翻页 
      - { when: has_menu, accept: Tab, send: Page_Down }             # tab 向下翻页 
      # - { when: has_menu, accept: comma, send: Page_Up }           # , 逗号向上翻页
      # - { when: has_menu, accept: period, send: Page_Down }        # 。 句号向下翻页
      # - { when: has_menu, accept: minus, send: Page_Up }           # - 向上翻页
      # - { when: has_menu, accept: equal, send: Page_Down }         # = 向下翻页
      # - { when: has_menu, accept: bracketleft, send: Page_Up }     # [ 向上翻页
      # - { when: has_menu, accept: bracketright, send: Page_Down }  # ] 向下翻页

      # Ctrl 快捷键操作
      - { when: composing, accept: Control+h, send: BackSpace }      # Ctrl + h      删除一个字符
      - { when: composing, accept: Control+j, send: Down }           # Ctrl + j      向下移动光标
      - { when: composing, accept: Control+k, send: Up }             # Ctrl + k      向上移动光标
      - { when: composing, accept: Control+Return, send: Escape }    # Ctrl + Enter  清空输入
                                                                     # Ctrl + l      在五笔方案中写的, 功能: 注释上屏

      # 中英标点符号切换        Ctrl + .
      - { when: always, accept: Control+period, toggle: ascii_punct }
      
      # 半角全角切换           Control + Shift + Space 多加个 Ctrl 以免误按, 同时 AHK 设置 Shift + Space 直接输入全角空格
      - { when: always, accept: Control+Shift+space, toggle: full_shape }

      # 简繁切换              Ctrl + \
      - { when: always, accept: Control+backslash, toggle: zh_trad }

      # 常用字过滤开关         Ctrl + Shift + |
      - { when: always, accept: Control+Shift+bar, toggle: character_filter }
     
      # 最近用的两个方案互相切  Ctrl + Shift + F5
      - { when: always, accept: Control+Shift+F5, select: .next }     

      # emoji 开关           Ctrl + Shift + F6
      - { when: always, accept: Control+Shift+F6, toggle: emoji }

      # 选择五笔单字方案       Ctrl + Shift + F7
      - { when: always, accept: Control+Shift+F7, select: single_char }
     
      # 候选词数量限制开关     Ctrl + Shift + F8
      - { when: always, accept: Control+Shift+F8, toggle: only_three_candidates }
      
      # 清空注释开关           Ctrl + Shift + F9
      - { when: always, accept: Control+Shift+F9, toggle: clear_comment }

      # 将小键盘 0~9 . 映射到主键盘，数字金额大写的 Lua 如 zv-1234.5678 可使用小键盘输入
      - { when: composing, accept: KP_0, send: 0 }
      - { when: composing, accept: KP_1, send: 1 }
      - { when: composing, accept: KP_2, send: 2 }
      - { when: composing, accept: KP_3, send: 3 }
      - { when: composing, accept: KP_4, send: 4 }
      - { when: composing, accept: KP_5, send: 5 }
      - { when: composing, accept: KP_6, send: 6 }
      - { when: composing, accept: KP_7, send: 7 }
      - { when: composing, accept: KP_8, send: 8 }
      - { when: composing, accept: KP_9, send: 9 }
      - { when: composing, accept: KP_Add, send: plus }            # +
      - { when: composing, accept: KP_Subtract, send: minus }      # -
      - { when: composing, accept: KP_Multiply, send: asterisk }   # *
      - { when: composing, accept: KP_Divide, send: slash }        # /
      - { when: composing, accept: KP_Decimal, send: period }      # .
      - { when: composing, accept: KP_Enter, send: space }         # 回车发送空格, 相当于上屏, 输入金额时用


  # 符号设置为一个映射，就自动上屏；设置为多个映射，如 '/' : [ '/', ÷ ] 则进行复选。
  # commit 直接上屏, 不只有一个映射时, 也是直接上屏
  # pair 交替上屏
  # full_shape: 全角没改，使用预设值
  # half_shape: 标点符号全部直接上屏, 有些不是中文符号
  #             '|' 是半角的，
  #             '~' 是半角的，
  #             '`'（反引号）没有改成 '·'（间隔号）
  punctuator:
    full_shape:
      "~" : "～"
      "`" : ["｀", "·", "・"]
      "!" : {commit: "！"}
      "@" : ["＠", "☯"]
      "#" : ["＃", "⌘"]
      "$" : ["￥", "$", "€", "£", "¥", "¢", "¤"]
      "%" : ["％", "°", "℃"]
      "^" : {commit: "……"}
      "&" : "＆"
      "*" : ["＊", "※", "×", "❂"]
      "(" : "（"
      ")" : "）"
      "-" : "－"
      "_" : "——"
      "+" : "＋"
      "=" : "＝"
      "{" : ["『", "〖", "｛"]
      "[" : ["「", "【", "〔", "［"]
      "}" : ["』", "〗", "｝"]
      "]" : ["」", "】", "〕", "］"]
      "|" : ["·", "｜", "§", "¦"]
      "\\": ["、", "＼"]
      ":" : {commit: "："}            
      ";" : {commit: "；"}
      "\"": {pair: ["“", "”"]}
      "'" : {pair: ["‘", "’"]}
      "<" : ["《", "〈", "«", "‹"]
      "," : {commit: "，"}
      ">" : ["》", "〉", "»", "›"]
      "." : {commit: "。"}
      "?" : {commit: "？"}
      "/" : ["／", "÷"]
      " " : {commit: "　"}

    half_shape:
      "~" : "~"
      "`" : "`"
      "!" : "！"
      "@" : "@"
      "#" : "#"
      "$" : "¥"
      "%" : "%"
      "^" : "……"
      "&" : "&"
      "*" : "*"
      "(" : "（"
      ")" : "）"
      "-" : "-"
      "_" : "——"
      "+" : "+"
      "=" : "="
      # "{" : "「"
      "{" : "{"
      "[" : "【"
      # "}" : "」"
      "}" : "}"
      "]" : "】"
      "|" : "|"
      "\\": "、"
      ":" : "："
      ";" : "；"
      "'" : { pair: [ "‘", "’" ] }
      "\"": { pair: [ "“", "”" ] }
      "<" : "《"
      "," : "，"
      ">" : "》"
      "." : "。"
      "?" : "？"
      "/" : "/"

recognizer:
  patterns:                                         # 当正则匹配到这些时, 非词库中的编码也不会上屏
    # uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"          # 大写可以留在输入法中


# 按键速查
# https://github.com/LEOYoon-Tsaw/Rime_collections/blob/master/Rime_description.md
# （没有 Command 键，不支持）
# accept 和 send 可用字段除 A-Za-z0-9 外，还包含以下键盘上实际有的键：
# 注意: 区分大小写
# BackSpace    退格
# Tab          水平定位符
# Linefeed     换行
# Clear        清除
# Return       回车
# Pause        暂停
# Sys_Req      印屏
# Escape       退出
# Delete       删除
# Home         原位
# Left         左箭头
# Up           上箭头
# Right        右箭头
# Down         下箭头
# Prior、Page_Up    上翻
# Next、Page_Down   下翻
# End          末位
# Begin        始位
# Shift_L      左Shift
# Shift_R      右Shift
# Control_L    左Ctrl
# Control_R    右Ctrl
# Meta_L       左Meta
# Meta_R       右Meta
# Alt_L        左Alt
# Alt_R        右Alt
# Super_L      左Super
# Super_R      右Super
# Hyper_L      左Hyper
# Hyper_R      右Hyper
# Caps_Lock    大写锁
# Shift_Lock   上档锁
# Scroll_Lock  滚动锁
# Num_Lock     小键板锁
# Select       选定
# Print        打印
# Execute      运行
# Insert       插入
# Undo         还原
# Redo         重做
# Menu         菜单
# Find         搜寻
# Cancel       取消
# Help         帮助
# Break        中断
# space        空格
# exclam       !
# quotedbl     "
# numbersign   #
# dollar       $
# percent      %
# ampersand    &
# apostrophe   '
# parenleft    (
# parenright   )
# asterisk     *
# plus         +
# comma        ,
# minus        -
# period       .
# slash        /
# colon        :
# semicolon    ;
# less         <
# equal        =
# greater      >
# question     ?
# at           @
# bracketleft  [
# backslash    \
# bracketright ]
# asciicircum  ^
# underscore   _
# grave        `
# braceleft    {
# bar          |
# braceright   }
# asciitilde   ~
# KP_Space     小键板空格
# KP_Tab       小键板水平定位符
# KP_Enter     小键板回车
# KP_Delete    小键板删除
# KP_Home      小键板原位
# KP_Left      小键板左箭头
# KP_Up        小键板上箭头
# KP_Right     小键板右箭头
# KP_Down      小键板下箭头
# KP_Prior、KP_Page_Up    小键板上翻
# KP_Next、KP_Page_Down   小键板下翻
# KP_End       小键板末位
# KP_Begin     小键板始位
# KP_Insert    小键板插入
# KP_Equal     小键板等于
# KP_Multiply  小键板乘号
# KP_Add       小键板加号
# KP_Subtract  小键板减号
# KP_Divide    小键板除号
# KP_Decimal   小键板小数点
# KP_0         小键板0
# KP_1         小键板1
# KP_2         小键板2
# KP_3         小键板3
# KP_4         小键板4
# KP_5         小键板5
# KP_9         小键板9
# KP_6         小键板6
# KP_7         小键板7
# KP_8         小键板8
